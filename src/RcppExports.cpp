// Generated by using Rcpp::compileAttributes() -> do not edit by hand
// Generator token: 10BE3573-1514-4C36-9D1C-5A225CD40393

#include <Rcpp.h>

using namespace Rcpp;

// digestFastqs
List digestFastqs(std::string experimentType, std::string fastqForward, std::string fastqReverse, int skipForward, int skipReverse, int umiLengthForward, int umiLengthReverse, int constantLengthForward, int constantLengthReverse, int variableLengthForward, int variableLengthReverse, std::string adapterForward, std::string adapterReverse, std::string wildTypeForward, std::string wildTypeReverse, std::string constantForward, std::string constantReverse, double avePhredMin, int variableNMax, int umiNMax, int nbrMutatedCodonsMax, CharacterVector forbiddenMutatedCodons, double mutatedPhredMin, bool verbose);
RcppExport SEXP _mutscan_digestFastqs(SEXP experimentTypeSEXP, SEXP fastqForwardSEXP, SEXP fastqReverseSEXP, SEXP skipForwardSEXP, SEXP skipReverseSEXP, SEXP umiLengthForwardSEXP, SEXP umiLengthReverseSEXP, SEXP constantLengthForwardSEXP, SEXP constantLengthReverseSEXP, SEXP variableLengthForwardSEXP, SEXP variableLengthReverseSEXP, SEXP adapterForwardSEXP, SEXP adapterReverseSEXP, SEXP wildTypeForwardSEXP, SEXP wildTypeReverseSEXP, SEXP constantForwardSEXP, SEXP constantReverseSEXP, SEXP avePhredMinSEXP, SEXP variableNMaxSEXP, SEXP umiNMaxSEXP, SEXP nbrMutatedCodonsMaxSEXP, SEXP forbiddenMutatedCodonsSEXP, SEXP mutatedPhredMinSEXP, SEXP verboseSEXP) {
BEGIN_RCPP
    Rcpp::RObject rcpp_result_gen;
    Rcpp::RNGScope rcpp_rngScope_gen;
    Rcpp::traits::input_parameter< std::string >::type experimentType(experimentTypeSEXP);
    Rcpp::traits::input_parameter< std::string >::type fastqForward(fastqForwardSEXP);
    Rcpp::traits::input_parameter< std::string >::type fastqReverse(fastqReverseSEXP);
    Rcpp::traits::input_parameter< int >::type skipForward(skipForwardSEXP);
    Rcpp::traits::input_parameter< int >::type skipReverse(skipReverseSEXP);
    Rcpp::traits::input_parameter< int >::type umiLengthForward(umiLengthForwardSEXP);
    Rcpp::traits::input_parameter< int >::type umiLengthReverse(umiLengthReverseSEXP);
    Rcpp::traits::input_parameter< int >::type constantLengthForward(constantLengthForwardSEXP);
    Rcpp::traits::input_parameter< int >::type constantLengthReverse(constantLengthReverseSEXP);
    Rcpp::traits::input_parameter< int >::type variableLengthForward(variableLengthForwardSEXP);
    Rcpp::traits::input_parameter< int >::type variableLengthReverse(variableLengthReverseSEXP);
    Rcpp::traits::input_parameter< std::string >::type adapterForward(adapterForwardSEXP);
    Rcpp::traits::input_parameter< std::string >::type adapterReverse(adapterReverseSEXP);
    Rcpp::traits::input_parameter< std::string >::type wildTypeForward(wildTypeForwardSEXP);
    Rcpp::traits::input_parameter< std::string >::type wildTypeReverse(wildTypeReverseSEXP);
    Rcpp::traits::input_parameter< std::string >::type constantForward(constantForwardSEXP);
    Rcpp::traits::input_parameter< std::string >::type constantReverse(constantReverseSEXP);
    Rcpp::traits::input_parameter< double >::type avePhredMin(avePhredMinSEXP);
    Rcpp::traits::input_parameter< int >::type variableNMax(variableNMaxSEXP);
    Rcpp::traits::input_parameter< int >::type umiNMax(umiNMaxSEXP);
    Rcpp::traits::input_parameter< int >::type nbrMutatedCodonsMax(nbrMutatedCodonsMaxSEXP);
    Rcpp::traits::input_parameter< CharacterVector >::type forbiddenMutatedCodons(forbiddenMutatedCodonsSEXP);
    Rcpp::traits::input_parameter< double >::type mutatedPhredMin(mutatedPhredMinSEXP);
    Rcpp::traits::input_parameter< bool >::type verbose(verboseSEXP);
    rcpp_result_gen = Rcpp::wrap(digestFastqs(experimentType, fastqForward, fastqReverse, skipForward, skipReverse, umiLengthForward, umiLengthReverse, constantLengthForward, constantLengthReverse, variableLengthForward, variableLengthReverse, adapterForward, adapterReverse, wildTypeForward, wildTypeReverse, constantForward, constantReverse, avePhredMin, variableNMax, umiNMax, nbrMutatedCodonsMax, forbiddenMutatedCodons, mutatedPhredMin, verbose));
    return rcpp_result_gen;
END_RCPP
}
// qual2int
IntegerVector qual2int(std::string x);
RcppExport SEXP _mutscan_qual2int(SEXP xSEXP) {
BEGIN_RCPP
    Rcpp::RObject rcpp_result_gen;
    Rcpp::RNGScope rcpp_rngScope_gen;
    Rcpp::traits::input_parameter< std::string >::type x(xSEXP);
    rcpp_result_gen = Rcpp::wrap(qual2int(x));
    return rcpp_result_gen;
END_RCPP
}

static const R_CallMethodDef CallEntries[] = {
    {"_mutscan_digestFastqs", (DL_FUNC) &_mutscan_digestFastqs, 24},
    {"_mutscan_qual2int", (DL_FUNC) &_mutscan_qual2int, 1},
    {NULL, NULL, 0}
};

RcppExport void R_init_mutscan(DllInfo *dll) {
    R_registerRoutines(dll, NULL, CallEntries, NULL, NULL);
    R_useDynamicSymbols(dll, FALSE);
}
